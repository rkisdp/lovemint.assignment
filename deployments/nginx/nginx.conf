worker_processes 1;

load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;
events { worker_connections 1024; }
error_log /dev/stderr info;
daemon off;

http {
  # NGINX will handle gzip compression of responses from the app server
  gzip on;
  gzip_proxied any;
  gzip_types text/plain application/json;
  gzip_min_length 1000;
  access_log /dev/stdout;
  server_tokens off;
  send_timeout 60;
  keepalive_timeout 60;
  more_clear_headers Server;
  log_format  main1  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"'
                    '$upstream_response_time $request_time ';

  server {
    # Listen to incoming connection on port 80
    listen 80;

    location /health {
      access_log off;
      return 200 "healthy\n";
    }

    # NGINX will reject anything not matching /accounts
    location / {
      access_log /dev/stdout main1;
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
        return 405;
      }

      # Only requests matching the whitelist expectations will
      # get sent to the application server
      proxy_pass http://0.0.0.0:8000/;
      proxy_pass_request_headers on;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;
    }
  }
}
